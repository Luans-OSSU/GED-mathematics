{"message":"unused imports: `AddAssign`, `DivAssign`, `Div`, `MulAssign`, `SubAssign`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\vectors\\mod.rs","byte_start":49,"byte_end":58,"line_start":2,"line_end":2,"column_start":25,"column_end":34,"is_primary":true,"text":[{"text":"    use std::ops::{Add, AddAssign, Div, DivAssign, Mul, MulAssign, Sub, SubAssign};","highlight_start":25,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\vectors\\mod.rs","byte_start":60,"byte_end":63,"line_start":2,"line_end":2,"column_start":36,"column_end":39,"is_primary":true,"text":[{"text":"    use std::ops::{Add, AddAssign, Div, DivAssign, Mul, MulAssign, Sub, SubAssign};","highlight_start":36,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\vectors\\mod.rs","byte_start":65,"byte_end":74,"line_start":2,"line_end":2,"column_start":41,"column_end":50,"is_primary":true,"text":[{"text":"    use std::ops::{Add, AddAssign, Div, DivAssign, Mul, MulAssign, Sub, SubAssign};","highlight_start":41,"highlight_end":50}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\vectors\\mod.rs","byte_start":81,"byte_end":90,"line_start":2,"line_end":2,"column_start":57,"column_end":66,"is_primary":true,"text":[{"text":"    use std::ops::{Add, AddAssign, Div, DivAssign, Mul, MulAssign, Sub, SubAssign};","highlight_start":57,"highlight_end":66}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\vectors\\mod.rs","byte_start":97,"byte_end":106,"line_start":2,"line_end":2,"column_start":73,"column_end":82,"is_primary":true,"text":[{"text":"    use std::ops::{Add, AddAssign, Div, DivAssign, Mul, MulAssign, Sub, SubAssign};","highlight_start":73,"highlight_end":82}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"src\\vectors\\mod.rs","byte_start":47,"byte_end":74,"line_start":2,"line_end":2,"column_start":23,"column_end":50,"is_primary":true,"text":[{"text":"    use std::ops::{Add, AddAssign, Div, DivAssign, Mul, MulAssign, Sub, SubAssign};","highlight_start":23,"highlight_end":50}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src\\vectors\\mod.rs","byte_start":79,"byte_end":90,"line_start":2,"line_end":2,"column_start":55,"column_end":66,"is_primary":true,"text":[{"text":"    use std::ops::{Add, AddAssign, Div, DivAssign, Mul, MulAssign, Sub, SubAssign};","highlight_start":55,"highlight_end":66}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src\\vectors\\mod.rs","byte_start":95,"byte_end":106,"line_start":2,"line_end":2,"column_start":71,"column_end":82,"is_primary":true,"text":[{"text":"    use std::ops::{Add, AddAssign, Div, DivAssign, Mul, MulAssign, Sub, SubAssign};","highlight_start":71,"highlight_end":82}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused imports: `AddAssign`, `DivAssign`, `Div`, `MulAssign`, `SubAssign`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\vectors\\mod.rs:2:25\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    use std::ops::{Add, AddAssign, Div, DivAssign, Mul, MulAssign, Sub, SubAssign};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^\u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^\u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}
{"message":"method `mul` has an incompatible type for trait","code":{"code":"E0053","explanation":"The parameters of any trait method must match between a trait implementation\nand the trait definition.\n\nErroneous code example:\n\n```compile_fail,E0053\ntrait Foo {\n    fn foo(x: u16);\n    fn bar(&self);\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    // error, expected u16, found i16\n    fn foo(x: i16) { }\n\n    // error, types differ in mutability\n    fn bar(&mut self) { }\n}\n```\n"},"level":"error","spans":[{"file_name":"src\\vectors\\mod.rs","byte_start":1065,"byte_end":1104,"line_start":44,"line_end":44,"column_start":9,"column_end":48,"is_primary":true,"text":[{"text":"        fn mul(self, scalar: T) -> Self::Output {","highlight_start":9,"highlight_end":48}],"label":"expected struct `Vector3D`, found type parameter `T`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\vectors\\mod.rs","byte_start":983,"byte_end":984,"line_start":41,"line_end":41,"column_start":10,"column_end":11,"is_primary":false,"text":[{"text":"    impl<T: Mul<Output = T>> Mul for Vector3D<T> {","highlight_start":10,"highlight_end":11}],"label":"this type parameter","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected fn pointer `fn(Vector3D<_>, Vector3D<T>) -> Vector3D<_>`\n   found fn pointer `fn(Vector3D<_>, T) -> Vector3D<_>`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0053]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: method `mul` has an incompatible type for trait\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\vectors\\mod.rs:44:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m41\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    impl<T: Mul<Output = T>> Mul for Vector3D<T> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mthis type parameter\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m44\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        fn mul(self, scalar: T) -> Self::Output {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected struct `Vector3D`, found type parameter `T`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: expected fn pointer `fn(Vector3D<_>, \u001b[0m\u001b[0m\u001b[1mVector3D<T>\u001b[0m\u001b[0m) -> Vector3D<_>`\u001b[0m\n\u001b[0m              found fn pointer `fn(Vector3D<_>, \u001b[0m\u001b[0m\u001b[1mT\u001b[0m\u001b[0m) -> Vector3D<_>`\u001b[0m\n\n"}
{"message":"aborting due to previous error; 1 warning emitted","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: aborting due to previous error; 1 warning emitted\u001b[0m\n\n"}
{"message":"For more information about this error, try `rustc --explain E0053`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0053`.\u001b[0m\n"}
